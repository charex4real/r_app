{"ast":null,"code":"var _jsxFileName = \"/Users/CHARLESINYANG/react/test/src/componets/counters.js\";\nimport React from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = counterId => {\n      //console.log('Event Handler called ', counterId); \n      const counters = this.state.counters.filter(c => c.id !== counterId); //this.setState({ counters : counters });\n\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.set;\n    };\n\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-primary btn-sm m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        onDelete: this.handleDelete,\n        counter: counter,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/CHARLESINYANG/react/test/src/componets/counters.js"],"names":["React","Counter","Counters","Component","constructor","props","handleDelete","counterId","counters","state","filter","c","id","setState","handleReset","set","value","render","map","counter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACX,UAAMA,KAAN;;AADW,SAYnBC,YAZmB,GAYJC,SAAS,IAAI;AACxB;AACA,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,SAAzC,CAAjB,CAFwB,CAGvB;;AACA,WAAKM,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACJ,KAjBkB;;AAAA,SAkBnBM,WAlBmB,GAkBN,MAAI;AACb,YAAMN,QAAQ,GAAG,KAAKO,GAAtB;AAEH,KArBkB;;AAGX,SAAKN,KAAL,GAAa;AACbD,MAAAA,QAAQ,EAAE,CACN;AAAEI,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,KAAK,EAAE;AAAhB,OADM,EAEN;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,KAAK,EAAE;AAAhB,OAFM,EAGN;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,KAAK,EAAE;AAAhB,OAHM,EAIN;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,KAAK,EAAE;AAAhB,OAJM;AADG,KAAb;AAQP;;AAWDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AACE,QAAA,OAAO,EAAE,KAAKH,WADhB;AAEA,QAAA,SAAS,EAAC,4BAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAIC,KAAKL,KAAL,CAAWD,QAAX,CAAoBU,GAApB,CAAwBC,OAAO,iBAC5B,QAAC,OAAD;AAA2B,QAAA,QAAQ,EAAE,KAAKb,YAA1C;AAAwD,QAAA,OAAO,EAAEa,OAAjE;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAeA,OAAO,CAACP,EAAvB;AAAA;AAAA;AAAA;AAAA,cADH,CAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAtCkC;;AAyCvC,eAAeV,QAAf","sourcesContent":["import React from 'react';\n\nimport Counter from './counter';\n\nclass Counters extends React.Component {\n    constructor(props) {\n            super(props);\n            \n            this.state = {\n            counters :[\n                { id: 1, value: 4 },\n                { id: 2, value: 0  },\n                { id: 3, value: 0 },\n                { id: 4, value: 0 }\n            ]\n        }\n    }\n    handleDelete = counterId => {\n        //console.log('Event Handler called ', counterId); \n        const counters = this.state.counters.filter(c => c.id !== counterId );\n         //this.setState({ counters : counters });\n         this.setState({counters})\n    }\n    handleReset =()=>{\n        const counters = this.set\n\n    };\n    render() { \n        return ( \n            <div>\n            <button \n              onClick={this.handleReset}  \n            className=\"btn btn-primary btn-sm m-2\">Reset</button>\n            {this.state.counters.map(counter => \n                <Counter key={ counter.id} onDelete={this.handleDelete} counter={counter} >\n                    <h4>Title</h4>\n                </Counter>\n                \n            )}\n            \n            </div>\n         );\n    }\n}\n \nexport default Counters;"]},"metadata":{},"sourceType":"module"}