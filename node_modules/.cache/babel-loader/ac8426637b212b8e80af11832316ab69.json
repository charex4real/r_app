{"ast":null,"code":"var _jsxFileName = \"/Users/CHARLESINYANG/react/test/src/componets/counter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.renderTags = () => {\n      if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 48\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 47\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    };\n\n    this.formatCount = () => {\n      const {\n        count\n      } = this.state;\n      return count === 0 ? \"Zero\" : count;\n    };\n\n    this.getBadgeClasses = () => {\n      let classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    };\n\n    this.state = {\n      count: this.value.props\n    };\n  }\n\n  render() {\n    console.log('props', this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge m-2 badge-primary\",\n        children: [this.formatCount(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/CHARLESINYANG/react/test/src/componets/counter.js"],"names":["React","Counter","Component","constructor","props","handleIncrement","setState","count","state","renderTags","tags","length","map","tag","formatCount","getBadgeClasses","classes","value","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,eAVmB,GAUD,MAAK;AAErB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA5B,OAAd;AACD,KAbkB;;AAAA,SAcnBE,UAdmB,GAcP,MAAK;AACb,UAAI,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAClC,0BAAO;AAAA,mBAAM,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,oBAAiBA;AAAjB,WAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,gBAA3B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAjBkB;;AAAA,SAoCnBC,WApCmB,GAoCL,MAAI;AACd,YAAM;AAAEP,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,aAAOD,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AAEH,KAxCkB;;AAAA,SA0ChBQ,eA1CgB,GA0CE,MAAM;AACtB,UAAIC,OAAO,GAAG,kBAAd;AACEA,MAAAA,OAAO,IAAI,KAAKR,KAAL,CAAWD,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACF,aAAOS,OAAP;AACF,KA9CgB;;AAGjB,SAAKR,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWb;AADT,KAAb;AAKD;;AAWDc,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKhB,KAA1B;AAGA,wBAEE;AAAA,8BAEE;AAAM,QAAA,SAAS,EAAG,yBAAlB;AAAA,mBAA8C,KAAKU,WAAL,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKT,eAAtB;AAAuC,QAAA,SAAS,EAAG,0BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAUD;;AAlCmC;;AAiDtC,eAAeJ,OAAf","sourcesContent":["import React from 'react';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        count :this.value.props\n      };\n      \n      \n  }\n\n  handleIncrement = () =>{\n   \n    this.setState({ count: this.state.count + 1 })\n  }\n  renderTags =() =>{\n      if (this.state.tags.length === 0) return <p>There are no tags</p>;\n      return <ul>{ this.state.tags.map(tag => <li key ={tag}>{ tag }</li>) } </ul>\n  }\n  \n  render() { \n    console.log('props', this.props);\n\n\n    return (\n     \n      <div>\n    \n        <span className = \"badge m-2 badge-primary\" >{this.formatCount()} </span>\n        <button onClick={this.handleIncrement} className = \"btn btn-secondary btn-sm\">Increment</button>\n        \n      </div>\n      \n    );\n  }\n  \n\n  formatCount = ()=>{\n      const { count } = this.state;\n      return count === 0 ? \"Zero\" : count;\n      \n  }\n\n     getBadgeClasses = () => {\n       let classes = \"badge m-2 badge-\"\n         classes += this.state.count === 0 ? \"warning\" : \"primary\";\n       return classes; \n    }\n}\nexport default Counter;"]},"metadata":{},"sourceType":"module"}