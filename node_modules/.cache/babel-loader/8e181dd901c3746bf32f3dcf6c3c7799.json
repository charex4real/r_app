{"ast":null,"code":"var _jsxFileName = \"/Users/CHARLESINYANG/react/test/src/componets/counter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIncrement = () => {\n      console.log(this.state.count);\n      this.setState;\n    };\n\n    this.renderTags = () => {\n      if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 48\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 47\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    };\n\n    this.formatCount = () => {\n      const {\n        count\n      } = this.state;\n      return count === 0 ? \"Zero\" : count;\n    };\n\n    this.getBadgeClasses = () => {\n      let classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    };\n\n    this.state = {\n      count: 1,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"{this.getBadgeClasses()}\",\n        children: [this.formatCount(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/CHARLESINYANG/react/test/src/componets/counter.js"],"names":["React","Counter","Component","constructor","props","handleIncrement","console","log","state","count","setState","renderTags","tags","length","map","tag","formatCount","getBadgeClasses","classes","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,eAZmB,GAYD,MAAK;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACA,WAAKC,QAAL;AACD,KAfkB;;AAAA,SAgBnBC,UAhBmB,GAgBP,MAAK;AACb,UAAI,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAClC,0BAAO;AAAA,mBAAM,KAAKL,KAAL,CAAWI,IAAX,CAAgBE,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,oBAAiBA;AAAjB,WAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,gBAA3B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAnBkB;;AAAA,SAqCnBC,WArCmB,GAqCL,MAAI;AACd,YAAM;AAAEP,QAAAA;AAAF,UAAY,KAAKD,KAAvB;AACA,aAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AAEH,KAzCkB;;AAAA,SA2ChBQ,eA3CgB,GA2CE,MAAM;AACtB,UAAIC,OAAO,GAAG,kBAAd;AACEA,MAAAA,OAAO,IAAI,KAAKV,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACF,aAAOS,OAAP;AACF,KA/CgB;;AAGjB,SAAKV,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETG,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFG,KAAb;AAOD;;AAWDO,EAAAA,MAAM,GAAG;AAGP,wBAEE;AAAA,8BAEE;AAAM,QAAA,SAAS,EAAG,0BAAlB;AAAA,mBAA+C,KAAKH,WAAL,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKX,eAAtB;AAAuC,QAAA,SAAS,EAAG,0BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKM,UAAL,EAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAUD;;AAnCmC;;AAkDtC,eAAeV,OAAf","sourcesContent":["import React from 'react';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n        count :1,\n        tags: ['tag1', 'tag2', 'tag3']\n        \n      };\n      \n      \n  }\n\n  handleIncrement = () =>{\n    console.log(this.state.count);\n    this.setState\n  }\n  renderTags =() =>{\n      if (this.state.tags.length === 0) return <p>There are no tags</p>;\n      return <ul>{ this.state.tags.map(tag => <li key ={tag}>{ tag }</li>) } </ul>\n  }\n  \n  render() { \n    \n\n    return (\n     \n      <div>\n    \n        <span className = \"{this.getBadgeClasses()}\" >{this.formatCount()} </span>\n        <button onClick={this.handleIncrement} className = \"btn btn-secondary btn-sm\">Increment</button>\n        {this.renderTags()}\n      </div>\n      \n    );\n  }\n  \n\n  formatCount = ()=>{\n      const { count } = this.state;\n      return count === 0 ? \"Zero\" : count;\n      \n  }\n\n     getBadgeClasses = () => {\n       let classes = \"badge m-2 badge-\"\n         classes += this.state.count === 0 ? \"warning\" : \"primary\";\n       return classes; \n    }\n}\nexport default Counter;"]},"metadata":{},"sourceType":"module"}